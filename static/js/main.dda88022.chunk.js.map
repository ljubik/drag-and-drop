{"version":3,"sources":["ContextAPI.js","components/ListTitle.js","components/TrelloCard.js","components/AddCardOrListText.js","components/AddCardOrList.js","components/TrelloList.js","App.js","index.js"],"names":["createContext","ListTitle","title","listId","classes","useStyle","useState","open","setOpen","newTitle","setNewTitle","updateListTitle","useContext","ContextAPI","InputBase","value","onChange","e","target","onBlur","autoFocus","fullWidth","inputProps","className","input","Typography","titleText","onClick","makeStyles","theme","display","margin","spacing","flexGrow","fontSize","fontWeight","background","border","borderRadius","TrelloCard","card","index","draggableId","id","provided","ref","innerRef","dragHandleProps","draggableProps","Paper","trelloCard","datetime","padding","AddCardOrListText","type","setTitle","addList","addCard","handleAddCardOrList","required","multiline","placeholder","confirm","options","Button","btnConfirm","IconButton","minWidth","paddingBottom","color","backgroundColor","AddCardOrList","root","Collapse","in","addText","marginTop","TrelloList","list","CssBaseline","droppableId","droppableProps","cards","map","App","data","setData","db","Provider","updatedTitle","lists","console","log","newCard","uuid","Date","toLocaleTimeString","listIds","newListId","newList","onDragEnd","result","destination","destDroppableId","destIndex","source","srcDroppableId","srcIndex","newListIds","splice","srcList","destList","dragginCard","filter","max","Math","floor","random","direction","container","listID","minHeight","overflowY","backgroundImage","backgroundPosition","backgroundSize","backgroundRepeat","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.dda88022.chunk.js","sourcesContent":["import { createContext } from 'react'\n\nexport default createContext(null)","import React, { useState, useContext } from 'react'\nimport { Typography, makeStyles } from '@material-ui/core';\nimport { InputBase } from '@material-ui/core';\nimport ContextAPI from '../ContextAPI';\n\nconst ListTitle = ({ title, listId }) => {\n  const classes = useStyle()\n  const [open, setOpen] = useState(false)\n  const [newTitle, setNewTitle] = useState(title)\n  const { updateListTitle } = useContext(ContextAPI)\n\n  const handleBlur = () => {\n    updateListTitle(newTitle, listId)\n    setOpen(false)\n  }\n\n  return (\n    <>\n      {open ?\n        <InputBase value={newTitle}\n          onChange={(e) => setNewTitle(e.target.value)}\n          onBlur={handleBlur}\n          autoFocus\n          fullWidth\n          inputProps={{ className: classes.input }}\n          />\n      : (\n        <div className={classes.title}>\n          <Typography className={classes.titleText} onClick={() => setOpen(true)}>\n            {title}\n          </Typography>\n          <span>...</span>\n        </div>\n      )}\n    </>\n  )\n}\n\nexport default ListTitle\n\nconst useStyle = makeStyles(theme => ({\n  title: {\n    display: 'flex',\n    margin: theme.spacing(1)\n  },\n  titleText: {\n    flexGrow: 1,\n    fontSize: '1.2rem',\n    fontWeight: 'bold'\n  },\n  input: {\n    fontSize: '1.2rem',\n    fontWeight: 'bold',\n    margin: theme.spacing(1),\n    \"&:focus\": {\n      background: '#fff',\n      border: '2px solid #226ffd',\n      borderRadius: '5px',\n    }\n  }\n}))\n","import React from 'react'\nimport { makeStyles, Paper } from '@material-ui/core';\nimport { Draggable } from 'react-beautiful-dnd'\n\nconst TrelloCard = ({ card, index }) => {\n  const classes = useStyle()\n  return (\n    <Draggable draggableId={card.id} index={index}>\n      {\n        (provided) => (\n          <div ref={provided.innerRef}\n            {...provided.dragHandleProps}\n            {...provided.draggableProps}>\n            <Paper className={classes.trelloCard}>\n              <h4>{card.title}</h4>\n              <h5>Створено: {card.datetime}</h5>\n            </Paper>\n          </div>\n        )\n      }\n    </Draggable>\n  )\n}\n\nexport default TrelloCard\n\nconst useStyle = makeStyles(theme => ({\n  trelloCard: {\n    margin: theme.spacing(1),\n    padding: theme.spacing(1, 2, 1, 2)\n  }\n}))","import React, { useState, useContext } from 'react'\nimport { InputBase, Paper, makeStyles, Button, IconButton } from '@material-ui/core';\nimport ClearIcon from '@material-ui/icons/Clear';\nimport ContextAPI from '../ContextAPI';\n\nconst AddCardOrListText = ({ setOpen, type, listId }) => {\n  const [title, setTitle] = useState('')\n  const classes = useStyle()\n  const { addList, addCard } = useContext(ContextAPI)\n\n  const handleAddCardOrList = () => {\n    type ? addList(title) : addCard(title, listId)\n    setTitle('')\n    setOpen(false)\n  }\n\n  const handleRemoveCardOrList = () => {\n    type ? addList(title) : addCard(title, listId)\n    setTitle('')\n    setOpen(true)\n  }\n\n  return (\n    <>\n      <Paper className={classes.card} onBlur={handleAddCardOrList}>\n        <InputBase\n          required\n          value={title}\n          onChange={(e) => setTitle(e.target.value)}\n          onBlur={(e) => setOpen(false)}\n          multiline\n          placeholder={`Enter a title for this ${type ? 'list' : 'card'}`}\n          inputProps={{ className: classes.input }}\n        />\n      </Paper>\n      <div className={classes.confirm}>\n        <div className={classes.options}>\n          <Button className={classes.btnConfirm}\n            onClick={handleAddCardOrList}>Add {type ? 'list' : 'card'}</Button>\n          <IconButton onClick={() => setOpen(false)}>\n            <ClearIcon />\n          </IconButton>\n        </div>\n        <IconButton>\n          <span>...</span>\n        </IconButton>\n      </div>\n    </>\n  )\n}\n\nexport default AddCardOrListText\n\nconst useStyle = makeStyles(theme => ({\n  card: {\n    minWidth: '280px',\n    margin: theme.spacing(0, 1, 1, 1),\n    paddingBottom: theme.spacing(4),\n  },\n  input: {\n    padding: theme.spacing(1)\n  },\n  confirm: {\n    display: 'flex',\n    margin: theme.spacing(0, 1, 1, 1),\n  },\n  options: {\n    flexGrow: 1,\n  },\n  btnConfirm: {\n    background:  '#5aac44',\n    color: '#fff',\n    \"&:hover\": {\n      backgroundColor: '#5aac44'\n    }\n  }\n}))","import React, { useState } from 'react'\nimport { makeStyles, Collapse, Paper, Typography } from '@material-ui/core';\nimport AddCardOrListText from './AddCardOrListText';\n\nconst AddCardOrList = ({ type, listId }) => {\n  const classes = useStyle()\n  const [open, setOpen] = useState(false)\n\n  return (\n    <div className={classes.root}>\n      <Collapse in={open}>\n        <AddCardOrListText setOpen={setOpen} type={type} listId={listId} />\n      </Collapse>\n      <Collapse in={!open}>\n        <Paper className={classes.addText} onClick={() => setOpen(true)}>\n          <Typography>+ Add a {type ? 'list' : 'card'}</Typography>\n        </Paper>\n      </Collapse>\n    </div>\n  )\n}\n\nexport default AddCardOrList\n\nconst useStyle = makeStyles(theme => ({\n  root: {\n    marginTop: theme.spacing(1)\n  },\n  addText: {\n    padding: theme.spacing(1, 2, 1, 2),\n    margin: theme.spacing(0, 1, 1, 1),\n    background: '#ebecf0',\n    \"&:hover\": {\n      backgroundColor: \"##ebecf0\"\n    }\n  }\n}))","import React from 'react'\nimport { Paper, CssBaseline, makeStyles } from '@material-ui/core';\nimport ListTitle from './ListTitle';\nimport TrelloCard from './TrelloCard';\nimport AddCardOrList from './AddCardOrList';\nimport { Draggable, Droppable } from 'react-beautiful-dnd'\n\nconst TrelloList = ({ list, index }) => {\n  const classes = useStyle()\n  return (\n    <Draggable draggableId={list.id} index={index}>\n      {(provided) => (\n        <div ref={provided.innerRef} {...provided.draggableProps}>\n          <Paper className={classes.root} {...provided.dragHandleProps}>\n            <CssBaseline />\n            <ListTitle title={list.title} listId={list.id} />\n            <Droppable droppableId={list.id}>\n              {\n                (provided) => (\n                  <div ref={provided.innerRef} {...provided.droppableProps}>\n                    {list.cards.map((card, index) => (\n                      <TrelloCard card={card} key={card.id} index={index} />\n                    ))}\n                    {provided.placeholder}\n                  </div>\n                )\n              }\n            </Droppable>\n            <AddCardOrList listId={list.id} />\n          </Paper>\n        </div>\n      )}\n    </Draggable>\n  )\n}\n\nexport default TrelloList\n\nconst useStyle = makeStyles(theme => ({\n  root: {\n    minWidth: '300px',\n    background: '#ebecf0',\n    margin: theme.spacing(1)\n  }\n}))\n","import \"./App.css\";\nimport { useState } from 'react';\nimport db from \"./db/db.json\";\nimport TrelloList from './components/TrelloList';\nimport { makeStyles } from '@material-ui/core';\nimport AddCardOrList from './components/AddCardOrList';\nimport mockData from './mockData';\nimport ContextAPI from './ContextAPI';\nimport uuid from 'react-uuid';\nimport { DragDropContext, Droppable } from 'react-beautiful-dnd';\n\n\nfunction App() {\n  const classes = useStyle()\n  const [data, setData] = useState(db)\n\n  const updateListTitle = (updatedTitle, listId) => {\n    const list = data.lists[listId]\n    list.title = updatedTitle\n    setData({\n      ...data,\n      lists: {\n        ...data.lists,\n        [listId]: list\n      }\n    })\n    console.log(\"updateListTitle\")\n  }\n\n  const addCard = (title, listId) => {\n    const newCardId = uuid()\n    const datetime = new Date().toLocaleTimeString()\n    const newCard = {\n      id: newCardId,\n      title,\n      datetime\n    }\n    const list = data.lists[listId]\n    list.cards = [...list.cards, newCard]\n\n    // setData({\n    //   ...data,\n    //   lists: {\n    //     ...data.lists,\n    //     [listId]: list\n    //   }\n    // })\n        setData({\n      listIds: [...data.listIds],\n      lists: {\n        ...data.lists,\n        [listId]: list\n      },\n    })\n    console.log(\"addCard\")\n  }\n\nconst delCard = (data) => {\n const newStartCardIds = data.CardIds;\n    newStartCardIds.splice(data.index, 1);\n    const newCardIds = {\n      ...data,\n      cardIds: newStartCardIds\n    }\n    console.log(\"delete Card\", data)\n}\n  \nconst delList = (data) => {\n const newStartListIds = data.listIds;\n    newStartListIds.splice(data.index, 1);\n    const newListIds = {\n      ...data,\n      listIds: newStartListIds\n    }\n    console.log(\"delete List\", data)\n  }\n\n  const addList = (title) => {\n    const newListId = uuid()\n    const newList = {\n      id: newListId,\n      title,\n      cards: []\n    }\n    \n    setData({\n      listIds: [...data.listIds, newListId],\n      lists: {\n        ...data.lists,\n        [newListId]: newList\n      },\n    })\n    console.log(\"addList\")\n  }\n\n  const onDragEnd = (result) => {\n    const { destination, destination: { droppableId: destDroppableId, index : destIndex }, source, source: { droppableId: srcDroppableId, index: srcIndex }, draggableId, type } = result;\n    // console.table([{ draggableId, srcDroppableId, destDroppableId }])\n    // console.table([{ type, srcIndex, destIndex }])\n    console.log(type, srcIndex, destIndex)\n    console.log(draggableId, srcDroppableId, destDroppableId)\n\n    if (!destination) return;\n    if (type === \"list\") {\n      const newListIds = data.listIds\n      newListIds.splice(srcIndex, 1)\n      newListIds.splice(destIndex, 0, draggableId)\n      return;\n    }\n\n    const srcList = data.lists[srcDroppableId]\n    const destList = data.lists[destDroppableId]\n    const dragginCard = srcList.cards.filter(card => card.id === draggableId)[0]\n\n    if (srcDroppableId === destDroppableId) {\n      srcList.cards.splice(srcIndex, 1)\n      destList.cards.splice(destIndex, 0, dragginCard)\n    }\n  }\n\n const moveTaskToDifferentList = (start, finish, source, destination, draggableId) => {\n    // remove task from start tasks\n    const newStartTaskIds = start.taskIds;\n    newStartTaskIds.splice(source.index, 1);\n    const newStartColumn = {\n      ...start,\n      taskIds: newStartTaskIds\n    }\n  \n    // add task to finish tasks\n    const newFinishTaskIds = finish.taskIds;\n    newFinishTaskIds.splice(destination.index, 0, draggableId);\n    const newFinishColumn  = {\n      ...finish,\n      taskIds: newFinishTaskIds\n    }\n\n    const newState = {\n      ...this.state,\n      columns: {\n        ...this.state.columns,\n        [newStartColumn.id]: newStartColumn,\n        [newFinishColumn.id]: newFinishColumn\n      },\n    };\n\n    this.setState(newState);\n  }\n\nfunction getRnd(max) {\n  return Math.floor(Math.random() * max);\n}\n\n  return (\n    <ContextAPI.Provider value={{ updateListTitle, addCard, addList }}>\n      <DragDropContext onDragEnd={onDragEnd}>\n        <Droppable droppableId={\"list\"+(getRnd(100))} type=\"list\" direction=\"horizontal\">\n          {\n            (provided) => (\n              <div className={classes.root} ref={provided.innerRef} {...provided.droppableProps}>\n                <div className={classes.container}>\n                    {data.listIds.map((listID, index) => {\n                      const list = data.lists[listID]\n                      return <TrelloList key={listID} list={list} index={index} />\n                    })}\n                  <div>\n                    <AddCardOrList type=\"list\" />\n                    {provided.placeholder}\n                  </div>\n                </div>\n              </div>\n            )\n          }\n        </Droppable>\n      </DragDropContext>\n    </ContextAPI.Provider>\n  );\n}\n\nexport default App;\n\nconst useStyle = makeStyles(theme => ({\n  root: {\n    minHeight: '100vh',\n    overflowY: 'auto',\n    backgroundImage: `url(/images/laptop.jpg)`,\n    backgroundPosition: 'center',\n    backgroundSize: 'cover',\n    backgroundRepeat: 'no-repeat',\n  },\n  container: {\n    display: 'flex',\n  }\n}))\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter } from 'react-router-dom';\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}